// Code generated by cmd/cgo; DO NOT EDIT.

//line /bigdata/qiuhan/codet5/usage/goroot/src/runtime/testdata/testprogcgo/traceback.go:1:1
// Copyright 2016 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package main

// This program will crash.
// We want the stack trace to include the C functions.
// We use a fake traceback, and a symbolizer that dumps a string we recognize.

/*
#cgo CFLAGS: -g -O0

// Defined in traceback_c.c.
extern int crashInGo;
int tracebackF1(void);
void cgoTraceback(void* parg);
void cgoSymbolizer(void* parg);
*/
import _ "unsafe"

import (
	"runtime"
	"unsafe"
)

func init() {
	register("CrashTraceback", CrashTraceback)
	register("CrashTracebackGo", CrashTracebackGo)
}

func CrashTraceback() {
	runtime.SetCgoTraceback(0, unsafe.Pointer(( /*line :33:44*/_Cgo_ptr(_Cfpvar_fp_cgoTraceback) /*line :33:57*/)), nil, unsafe.Pointer(( /*line :33:81*/_Cgo_ptr(_Cfpvar_fp_cgoSymbolizer) /*line :33:95*/)))
	( /*line :34:2*/_Cfunc_tracebackF1 /*line :34:14*/)()
}

func CrashTracebackGo() {
	( /*line :38:2*/*_Cvar_crashInGo /*line :38:12*/) = 1
	CrashTraceback()
}

//export h1
func h1() {
	h2()
}

func h2() {
	h3()
}

func h3() {
	var x *int
	*x = 0
}
