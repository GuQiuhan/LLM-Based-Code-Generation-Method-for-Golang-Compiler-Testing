// Code generated by cmd/cgo; DO NOT EDIT.

//line /tmp/cgosotest2696710246/src/cgosotest/cgoso.go:1:1
// Copyright 2015 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package cgosotest

// This test verifies that Go can access C variables
// in shared object file via cgo.

/*
// intentionally write the same LDFLAGS differently
// to test correct handling of LDFLAGS.
#cgo windows CFLAGS: -DIMPORT_DLL
#cgo linux LDFLAGS: -L. -lcgosotest
#cgo dragonfly LDFLAGS: -L. -l cgosotest
#cgo freebsd LDFLAGS: -L. -l cgosotest
#cgo openbsd LDFLAGS: -L. -l cgosotest
#cgo solaris LDFLAGS: -L. -lcgosotest
#cgo netbsd LDFLAGS: -L. libcgosotest.so
#cgo darwin LDFLAGS: -L. libcgosotest.dylib
#cgo windows LDFLAGS: -L. libcgosotest.a
#cgo aix LDFLAGS: -L. -l cgosotest

#include "cgoso_c.h"

const char* getVar() {
	    return exported_var;
}
*/
import _ "unsafe"

import "fmt"

func Test() {
	const want = "Hello world"
	got := ( /*line :36:9*/_Cfunc_GoString /*line :36:18*/)(( /*line :36:20*/_Cfunc_getVar /*line :36:27*/)())
	if got != want {
		panic(fmt.Sprintf("testExportedVar: got %q, but want %q", got, want))
	}
	got = ( /*line :40:8*/_Cfunc_GoString /*line :40:17*/)(( /*line :40:19*/*_Cvar_exported_var /*line :40:32*/))
	if got != want {
		panic(fmt.Sprintf("testExportedVar: got %q, but want %q", got, want))
	}
}
