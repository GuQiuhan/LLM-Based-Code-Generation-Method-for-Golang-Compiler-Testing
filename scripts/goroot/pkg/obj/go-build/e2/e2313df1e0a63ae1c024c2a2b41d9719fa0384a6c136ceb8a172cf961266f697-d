//go:cgo_ldflag "-O2"
//go:cgo_ldflag "-g"
//go:cgo_ldflag "-L/tmp/cgosotest2696710246/src/cgosotest"
//go:cgo_ldflag "-lcgosotest"
// Code generated by cmd/cgo; DO NOT EDIT.

package cgosotest

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype__GoString_ string

type _Ctype_char int8

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_long int64

type _Ctype_ptrdiff_t = _Ctype_long

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})
//go:linkname __cgo_exported_var exported_var
//go:cgo_import_static exported_var
var __cgo_exported_var byte
var _Cvar_exported_var **_Ctype_char = (**_Ctype_char)(unsafe.Pointer(&__cgo_exported_var))


//go:linkname _cgo_runtime_gostring runtime.gostring
func _cgo_runtime_gostring(*_Ctype_char) string

// GoString converts the C string p into a Go string.
func _Cfunc_GoString(p *_Ctype_char) string {
	return _cgo_runtime_gostring(p)
}
//go:cgo_import_static _cgo_3d46e9390b3c_Cfunc_getVar
//go:linkname __cgofn__cgo_3d46e9390b3c_Cfunc_getVar _cgo_3d46e9390b3c_Cfunc_getVar
var __cgofn__cgo_3d46e9390b3c_Cfunc_getVar byte
var _cgo_3d46e9390b3c_Cfunc_getVar = unsafe.Pointer(&__cgofn__cgo_3d46e9390b3c_Cfunc_getVar)

//go:cgo_unsafe_args
func _Cfunc_getVar() (r1 *_Ctype_char) {
	_cgo_runtime_cgocall(_cgo_3d46e9390b3c_Cfunc_getVar, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
