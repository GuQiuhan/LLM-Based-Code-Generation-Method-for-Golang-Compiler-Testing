// Code generated by cmd/cgo; DO NOT EDIT.

//line /bigdata/qiuhan/codet5/usage/goroot/misc/cgo/testsanitizers/testdata/tsan4.go:1:1
// Copyright 2016 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package main

// Check that calls to C.malloc/C.free do not trigger TSAN false
// positive reports.

// #cgo CFLAGS: -fsanitize=thread
// #cgo LDFLAGS: -fsanitize=thread
// #include <stdlib.h>
import _ "unsafe"

import (
	"runtime"
	"sync"
)

func main() {
	var wg sync.WaitGroup
	for i := 0; i < 10; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()
			for i := 0; i < 100; i++ {
				p := ( /*line :27:10*/_Cfunc__CMalloc /*line :27:17*/)( /*line :27:19*/_Ctype_size_t /*line :27:27*/(i * 10))
				runtime.Gosched()
				func() { _cgo0 := /*line :29:12*/p; _cgoCheckPointer(_cgo0, nil); /*line :29:14*/_Cfunc_free(_cgo0); }()
			}
		}()
	}
	wg.Wait()
}
