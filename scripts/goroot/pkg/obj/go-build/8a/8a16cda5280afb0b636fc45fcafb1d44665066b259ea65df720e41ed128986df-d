//go:cgo_ldflag "-O2"
//go:cgo_ldflag "-g"
// Code generated by cmd/cgo; DO NOT EDIT.

package issue23555

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype_size_t = _Ctype_ulong

type _Ctype_ulong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})


func _Cfunc__CMalloc(n _Ctype_size_t) unsafe.Pointer {
	return _cgo_cmalloc(uint64(n))
}
//go:cgo_import_static _cgo_04eb6cfbd9f6_Cfunc_free
//go:linkname __cgofn__cgo_04eb6cfbd9f6_Cfunc_free _cgo_04eb6cfbd9f6_Cfunc_free
var __cgofn__cgo_04eb6cfbd9f6_Cfunc_free byte
var _cgo_04eb6cfbd9f6_Cfunc_free = unsafe.Pointer(&__cgofn__cgo_04eb6cfbd9f6_Cfunc_free)

//go:cgo_unsafe_args
func _Cfunc_free(p0 unsafe.Pointer) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_04eb6cfbd9f6_Cfunc_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}

//go:cgo_import_static _cgo_04eb6cfbd9f6_Cfunc__Cmalloc
//go:linkname __cgofn__cgo_04eb6cfbd9f6_Cfunc__Cmalloc _cgo_04eb6cfbd9f6_Cfunc__Cmalloc
var __cgofn__cgo_04eb6cfbd9f6_Cfunc__Cmalloc byte
var _cgo_04eb6cfbd9f6_Cfunc__Cmalloc = unsafe.Pointer(&__cgofn__cgo_04eb6cfbd9f6_Cfunc__Cmalloc)

//go:linkname runtime_throw runtime.throw
func runtime_throw(string)

//go:cgo_unsafe_args
func _cgo_cmalloc(p0 uint64) (r1 unsafe.Pointer) {
	_cgo_runtime_cgocall(_cgo_04eb6cfbd9f6_Cfunc__Cmalloc, uintptr(unsafe.Pointer(&p0)))
	if r1 == nil {
		runtime_throw("runtime: C malloc failed")
	}
	return
}
